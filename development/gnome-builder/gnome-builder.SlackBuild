#!/bin/bash

# Slackware build script for gnome-builder

# Copyright 2023 Charadon US
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=gnome-builder
VERSION=${VERSION:-42.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
    *) ARCH=$( uname -m ) ;;
esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.xz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

mkdir build
cd build
  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  meson .. \
  --buildtype=release \
  --infodir=/usr/info \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --localstatedir=/var \
  --mandir=/usr/man \
  --prefix=/usr \
  --sysconfdir=/etc \
  -Dstrip=true \
  -Dhelp=true \
  -Ddocs=true \
  -Dwebkit=enabled \
  -Dplugin_autotools=true \
  -Dplugin_beautifier=true \
  -Dplugin_blueprint=true \
  -Dplugin_c_pack=true \
  -Dplugin_cargo=true \
  -Dplugin_clang=true \
  -Dplugin_clangd=true \
  -Dplugin_clang_format=true \
  -Dplugin_cmake=true \
  -Dplugin_codespell=true \
  -Dplugin_code_index=true \
  -Dplugin_color_picker=false `# Disabled due to outdated libportal.` \
  -Dplugin_copyright=true \
  -Dplugin_ctags=true \
  -Dplugin_devhelp=false  `# Disabled due to outdated libportal.` \
  -Dplugin_deviced=false `# Disabled due to no stable release of deviced` \
  -Dplugin_dspy=true \
  -Dplugin_editorconfig=true \
  -Dplugin_eslint=true \
  -Dplugin_file_search=true \
  -Dplugin_flatpak=false `# Disabled due to outdated libportal` \
  -Dplugin_gdb=true \
  -Dplugin_gdiagnose=true \
  -Dplugin_gettext=true \
  -Dplugin_git=true \
  -Dplugin_gjs_symbols=true \
  -Dplugin_glade=true \
  -Dplugin_gnome_code_assistance=true \
  -Dplugin_go_langserv=true \
  -Dplugin_gradle=true \
  -Dplugin_grep=true \
  -Dplugin_gvls=true \
  -Dplugin_html_completion=true \
  -Dplugin_html_preview=true \
  -Dplugin_intelephense=true \
  -Dplugin_jedi_language_server=true \
  -Dplugin_jhbuild=true \
  -Dplugin_make=true \
  -Dplugin_maven=true \
  -Dplugin_meson=true \
  -Dplugin_modelines=true \
  -Dplugin_mono=true \
  -Dplugin_newcomers=true \
  -Dplugin_notification=true \
  -Dplugin_npm=true \
  -Dplugin_phpize=true \
  -Dplugin_podman=true \
  -Dplugin_python_pack=true \
  -Dplugin_qemu=true \
  -Dplugin_quick_highlight=true \
  -Dplugin_retab=true \
  -Dplugin_rls=true \
  -Dplugin_rstcheck=true \
  -Dplugin_rubocop=true \
  -Dplugin_rust_analyzer=true \
  -Dplugin_shellcmd=true \
  -Dplugin_spellcheck=true \
  -Dplugin_stylelint=true \
  -Dplugin_sysprof=true \
  -Dplugin_sysroot=true \
  -Dplugin_todo=true \
  -Dplugin_ts_language_server=true \
  -Dplugin_update_manager=false `# Disabled due to outdated libportal` \
  -Dplugin_vala=true \
  -Dplugin_vagrant=true \
  -Dplugin_valgrind=true \
  -Dplugin_vls=true \
  -Dplugin_waf=true \
  -Dplugin_words=true \
  -Dplugin_xml_pack=true
  "${NINJA:=ninja}"
  DESTDIR=$PKG $NINJA install
cd ..

rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a COPYING AUTHORS NEWS $PKG/usr/doc/$PRGNAM-$VERSION
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION/html
mv $PKG/usr/share/doc/* $PKG/usr/doc/$PRGNAM-$VERSION/html
rm -rf $PKG/usr/share/doc
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

if [ -f $CWD/slack-required ]; then cat $CWD/slack-required > $PKG/install/slack-required; fi
if [ -f $CWD/dependees-on ]; then cat $CWD/dependees-on > $PKG/install/dependees-on; fi
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
cp $CWD/$PRGNAM.dep  $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.dep
